import javafx.application.Application;
import javafx.application.Platform;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ProgressBar;
import javafx.scene.paint.Color;
import javafx.stage.Stage;

public class KontrolkiZadanie extends Application {

    public static void main(String[] args) {
        launch(args);
    }

    @Override
    public void start(Stage primaryStage) {


        /////////// Label
        Label label = new Label("Zadanie z paskiem");
        label.setLayoutX(30);
        label.setLayoutY(10);

        ////////// ProgressBar
        ProgressBar progressBar = new ProgressBar();
        progressBar.setLayoutX(30);
        progressBar.setLayoutY(30);

        //////////// Button
        Button buttonStart = new Button("Start");
        buttonStart.setLayoutX(30);
        buttonStart.setLayoutY(90);

        Button buttonRestart = new Button("Restart");
        buttonRestart.setLayoutX(30);
        buttonRestart.setLayoutY(120);
        buttonRestart.setDisable(true);





        //////////////// Akcja


        Runnable runnable = new Runnable() {
            @Override
            public void run() {

                for(int i = 100; i <= 10000; i+= 100)
                {
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException e) {
                        throw new RuntimeException(e);
                    }

                    double progressValue = (double) i / 10000;
                    System.out.println(progressValue);
                    Platform.runLater(new Runnable() {
                        @Override
                        public void run() {
                            progressBar.setProgress(progressValue);
                        }
                    });

                }
                buttonRestart.setDisable(false);


            }
        };


        buttonStart.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent actionEvent) {
                buttonStart.setDisable(true);
                buttonRestart.setDisable(true);

                Thread thread = new Thread(runnable);
                thread.start();



            }
        });


        buttonRestart.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent actionEvent) {
                progressBar.setProgress(0);
                buttonStart.setDisable(false);
                buttonRestart.setDisable(true);
            }
        });





        ///////////////////////////////////
        Group group = new Group();
        group.getChildren().add(label);
        group.getChildren().add(progressBar);
        group.getChildren().add(buttonStart);
        group.getChildren().add(buttonRestart);

        Scene scene = new Scene(group, 800, 600, Color.WHITE);

        primaryStage.setScene(scene);

        primaryStage.setTitle("Zadanie z paskiem");

        primaryStage.show();


    }
}
